# Amazon OA LeetCode ##### (Must Visit)
https://leetcode.com/discuss/post/5399941/amazon-oa-questions-compiled-by-anonymou-bnxh/



# AMAZON LeetCode Interview #

3 months (03/2025)
146. LRU Cache
44.6%
Med.

1. Two Sum
55.2%
Easy

200. Number of Islands
61.7%
Med.

42. Trapping Rain Water
64.4%
Hard

767. Reorganize String
55.8%
Med.

3. Longest Substring Without Repeating Characters
36.4%
Med.

49. Group Anagrams
70.4%
Med.

207. Course Schedule
48.6%
Med.

2. Add Two Numbers
45.6%
Med.

121. Best Time to Buy and Sell Stock
54.8%
Easy

210. Course Schedule II
52.7%
Med.

23. Merge k Sorted Lists
55.9%
Hard

33. Search in Rotated Sorted Array
42.4%
Med.

56. Merge Intervals
48.9%
Med.

3371. Identify the Largest Outlier in an Array
34.1%
Med.

347. Top K Frequent Elements
64.2%
Med.

55. Jump Game
39.2%
Med.

15. 3Sum
36.5%
Med.

88. Merge Sorted Array
52.4%
Easy

127. Word Ladder
42.0%
Hard

79. Word Search
44.7%
Med.

2357. Make Array Zero by Subtracting Equal Amounts
73.2%
Easy

2214. Minimum Health to Beat Game
58.4%
Med.

14. Longest Common Prefix
45.0%
Easy

70. Climbing Stairs
53.4%
Easy

295. Find Median from Data Stream
53.0%
Hard

26. Remove Duplicates from Sorted Array
59.6%
Easy

198. House Robber
52.0%
Med.

560. Subarray Sum Equals K
45.0%
Med.

4. Median of Two Sorted Arrays
43.1%
Hard

138. Copy List with Random Pointer
59.7%
Med.

1152. Analyze User Website Visit Pattern
43.3%
Med.

1768. Merge Strings Alternately
81.9%
Easy

5. Longest Palindromic Substring
35.4%
Med.

20. Valid Parentheses
41.9%
Easy

22. Generate Parentheses
76.6%
Med.

215. Kth Largest Element in an Array
67.7%
Med.

380. Insert Delete GetRandom O(1)
54.9%
Med.

994. Rotting Oranges
56.1%
Med.

128. Longest Consecutive Sequence
47.2%
Med.

53. Maximum Subarray
51.8%
Med.

78. Subsets
80.4%
Med.

236. Lowest Common Ancestor of a Binary Tree
65.8%
Med.

322. Coin Change
45.9%
Med.

2667. Create Hello World Function
82.0%
Easy

2790. Maximum Number of Groups With Increasing Length
21.3%
Hard

1492. The kth Factor of n
69.3%
Med.

17. Letter Combinations of a Phone Number
63.2%
Med.

54. Spiral Matrix
53.1%
Med.

169. Majority Element
65.5%
Easy

735. Asteroid Collision
45.1%
Med.

41. First Missing Positive
40.7%
Hard

45. Jump Game II
41.2%
Med.

199. Binary Tree Right Side View
65.9%
Med.

238. Product of Array Except Self
67.4%
Med.

239. Sliding Window Maximum
47.3%
Hard

472. Concatenated Words
49.4%
Hard

875. Koko Eating Bananas
48.9%
Med.

1757. Recyclable and Low Fat Products
89.4%
Easy

36. Valid Sudoku
61.8%
Med.

102. Binary Tree Level Order Traversal
69.9%
Med.

253. Meeting Rooms II
52.0%
Med.

907. Sum of Subarray Minimums
37.4%
Med.

3462. Maximum Sum With at Most K Elements
60.2%
Med.

7. Reverse Integer
29.9%
Med.

50. Pow(x, n)
36.6%
Med.

62. Unique Paths
65.5%
Med.

227. Basic Calculator II
45.3%
Med.

443. String Compression
57.4%
Med.

863. All Nodes Distance K in Binary Tree
65.9%
Med.

31. Next Permutation
42.4%
Med.

75. Sort Colors
66.5%
Med.

2055. Plates Between Candles
46.3%
Med.

139. Word Break
47.9%
Med.

212. Word Search II
37.1%
Hard

230. Kth Smallest Element in a BST
74.8%
Med.

387. First Unique Character in a String
63.3%
Easy

543. Diameter of Binary Tree
62.9%
Easy

739. Daily Temperatures
67.0%
Med.

3396. Minimum Number of Operations to Make Elements in Array Distinct
58.1%
Easy

3407. Substring Matching Pattern
26.1%
Easy

3455. Shortest Matching Substring
24.2%
Hard

3459. Length of Longest V-Shaped Diagonal Segment
39.7%
Hard

3461. Check If Digits Are Equal in String After Operations I
80.0%
Easy

9. Palindrome Number
58.8%
Easy

18. 4Sum
37.7%
Med.

21. Merge Two Sorted Lists
66.4%
Easy

25. Reverse Nodes in k-Group
62.2%
Hard

124. Binary Tree Maximum Path Sum
41.0%
Hard

131. Palindrome Partitioning
71.5%
Med.

155. Min Stack
56.0%
Med.

189. Rotate Array
42.5%
Med.

525. Contiguous Array
49.0%
Med.

787. Cheapest Flights Within K Stops
40.1%
Med.

11. Container With Most Water
57.3%
Med.

28. Find the Index of the First Occurrence in a String
44.5%
Easy

32. Longest Valid Parentheses
35.8%
Hard

101. Symmetric Tree
58.7%
Easy

103. Binary Tree Zigzag Level Order Traversal
61.1%
Med.

122. Best Time to Buy and Sell Stock II
69.0%
Med.

140. Word Break II
53.0%
Hard

150. Evaluate Reverse Polish Notation
54.2%
Med.

496. Next Greater Element I
74.0%
Easy

733. Flood Fill
65.9%
Easy

1004. Max Consecutive Ones III
65.4%
Med.

2193. Minimum Number of Moves to Make Palindrome
51.8%
Hard

1642. Furthest Building You Can Reach
50.2%
Med.

34. Find First and Last Position of Element in Sorted Array
46.2%
Med.

39. Combination Sum
74.1%
Med.

48. Rotate Image
77.3%
Med.

64. Minimum Path Sum
65.9%
Med.

84. Largest Rectangle in Histogram
46.7%
Hard

118. Pascal's Triangle
76.5%
Easy

134. Gas Station
46.0%
Med.

143. Reorder List
61.7%
Med.

151. Reverse Words in a String
50.4%
Med.

152. Maximum Product Subarray
34.6%
Med.

153. Find Minimum in Rotated Sorted Array
52.2%
Med.

234. Palindrome Linked List
55.3%
Easy

2221. Find Triangular Sum of an Array
78.8%
Med.

283. Move Zeroes
62.6%
Easy

297. Serialize and Deserialize Binary Tree
58.4%
Hard

460. LFU Cache
46.0%
Hard

621. Task Scheduler
61.1%
Med.

632. Smallest Range Covering Elements from K Lists
69.8%
Hard

769. Max Chunks To Make Sorted
63.9%
Med.

528. Random Pick with Weight
48.3%
Med.

962. Maximum Width Ramp
55.6%
Med.

509. Fibonacci Number
72.6%
Easy

981. Time Based Key-Value Store
49.4%
Med.

3104. Find Longest Self-Contained Substring
58.3%
Hard

1478. Allocate Mailboxes
55.6%
Hard

1650. Lowest Common Ancestor of a Binary Tree III
82.0%
Med.

1752. Check if Array Is Sorted and Rotated
55.0%
Easy

12. Integer to Roman
68.0%
Med.

13. Roman to Integer
64.3%
Easy

19. Remove Nth Node From End of List
48.2%
Med.

46. Permutations
80.2%
Med.

51. N-Queens
71.8%
Hard

69. Sqrt(x)
40.1%
Easy

92. Reverse Linked List II
49.2%
Med.

162. Find Peak Element
46.4%
Med.

202. Happy Number
57.6%
Easy

206. Reverse Linked List
78.7%
Easy

219. Contains Duplicate II
48.3%
Easy

224. Basic Calculator
45.0%
Hard

235. Lowest Common Ancestor of a Binary Search Tree
67.6%
Med.

242. Valid Anagram
66.2%
Easy

300. Longest Increasing Subsequence
57.3%
Med.

328. Odd Even Linked List
61.8%
Med.

332. Reconstruct Itinerary
43.4%
Hard

344. Reverse String
79.6%
Easy

399. Evaluate Division
62.8%
Med.

407. Trapping Rain Water II
58.7%
Hard

435. Non-overlapping Intervals
55.0%
Med.

547. Number of Provinces
68.1%
Med.

658. Find K Closest Elements
48.4%
Med.

706. Design HashMap
65.7%
Easy

909. Snakes and Ladders
44.1%
Med.

926. Flip String to Monotone Increasing
61.6%
Med.

987. Vertical Order Traversal of a Binary Tree
50.5%
Hard

2948. Make Lexicographically Smallest Array by Swapping Elements
60.4%
Med.

1749. Maximum Absolute Sum of Any Subarray
71.5%
Med.

10. Regular Expression Matching
29.0%
Hard

1930. Unique Length-3 Palindromic Subsequences
70.9%
Med.

63. Unique Paths II
42.8%
Med.

71. Simplify Path
46.8%
Med.

73. Set Matrix Zeroes
59.1%
Med.

76. Minimum Window Substring
44.8%
Hard

80. Remove Duplicates from Sorted Array II
62.3%
Med.

98. Validate Binary Search Tree
34.0%
Med.

115. Distinct Subsequences
49.5%
Hard

125. Valid Palindrome
50.3%
Easy

135. Candy
44.4%
Hard

148. Sort List
61.1%
Med.

217. Contains Duplicate
62.9%
Easy

334. Increasing Triplet Subsequence
39.2%
Med.

2235. Add Two Integers
88.1%
Easy

349. Intersection of Two Arrays
76.1%
Easy

378. Kth Smallest Element in a Sorted Matrix
63.3%
Med.

392. Is Subsequence
48.2%
Easy

2342. Max Sum of a Pair With Equal Sum of Digits
66.0%
Med.

2355. Maximum Number of Books You Can Take
39.3%
Hard

485. Max Consecutive Ones
61.9%
Easy

540. Single Element in a Sorted Array
59.1%
Med.

2560. House Robber IV
65.2%
Med.

827. Making A Large Island
54.3%
Hard

873. Length of Longest Fibonacci Subsequence
57.7%
Med.

901. Online Stock Span
67.3%
Med.

973. K Closest Points to Origin
67.6%
Med.

8. String to Integer (atoi)
18.8%
Med.

1071. Greatest Common Divisor of Strings
52.6%
Easy

1148. Article Views I
77.2%
Easy

1358. Number of Substrings Containing All Three Characters
73.0%
Med.

1462. Course Schedule IV
59.6%
Med.

6. Zigzag Conversion
50.9%
Med.

27. Remove Element
59.5%
Easy

66. Plus One
47.1%
Easy

67. Add Binary
55.3%
Easy

68. Text Justification
47.3%
Hard

72. Edit Distance
58.3%
Med.

86. Partition List
58.4%
Med.

108. Convert Sorted Array to Binary Search Tree
73.6%
Easy

112. Path Sum
52.5%
Easy

133. Clone Graph
61.4%
Med.

136. Single Number
75.4%
Easy

167. Two Sum II - Input Array Is Sorted
63.0%
Med.

179. Largest Number
40.9%
Med.

2130. Maximum Twin Sum of a Linked List
81.3%
Med.

205. Isomorphic Strings
46.5%
Easy

208. Implement Trie (Prefix Tree)
67.5%
Med.

209. Minimum Size Subarray Sum
48.8%
Med.

226. Invert Binary Tree
78.7%
Easy

287. Find the Duplicate Number
62.4%
Med.

329. Longest Increasing Path in a Matrix
55.0%
Hard

337. House Robber III
54.8%
Med.

354. Russian Doll Envelopes
37.2%
Hard

410. Split Array Largest Sum
57.5%
Hard

2385. Amount of Time for Binary Tree to Be Infected
63.2%
Med.

450. Delete Node in a BST
52.6%
Med.

451. Sort Characters By Frequency
73.7%
Med.

2429. Minimize XOR
62.5%
Med.

503. Next Greater Element II
65.7%
Med.

577. Employee Bonus
77.0%
Easy

584. Find Customer Referee
71.6%
Easy

2594. Minimum Time to Repair Cars
60.3%
Med.

643. Maximum Average Subarray I
44.8%
Easy

2559. Count Vowel Strings in Ranges
67.9%
Med.

653. Two Sum IV - Input is a BST
62.0%
Easy

662. Maximum Width of Binary Tree
43.8%
Med.

713. Subarray Product Less Than K
52.5%
Med.

721. Accounts Merge
59.0%
Med.

2683. Neighboring Bitwise XOR
80.4%
Med.

768. Max Chunks To Make Sorted II
54.0%
Hard

703. Kth Largest Element in a Stream
59.7%
Easy

844. Backspace String Compare
49.4%
Easy

876. Middle of the Linked List
80.2%
Easy

912. Sort an Array
57.0%
Med.

2877. Create a DataFrame from List
81.5%
Easy

977. Squares of a Sorted Array
73.1%
Easy

992. Subarrays with K Different Integers
65.2%
Hard

1011. Capacity To Ship Packages Within D Days
71.5%
Med.

2965. Find Missing and Repeated Values
84.0%
Easy

2226. Maximum Candies Allocated to K Children
50.4%
Med.

1267. Count Servers that Communicate
73.5%
Med.

1268. Search Suggestions System
65.0%
Med.

3174. Clear Digits
82.7%
Easy

1431. Kids With the Greatest Number of Candies
88.0%
Easy

1762. Buildings With an Ocean View
80.6%
Med.

1838. Frequency of the Most Frequent Element
44.0%
Med.

1910. Remove All Occurrences of a Substring
78.0%
Med.

1922. Count Good Numbers
48.5%
Med.

29. Divide Two Integers
18.2%
Med.

43. Multiply Strings
41.9%
Med.

44. Wildcard Matching
29.4%
Hard

47. Permutations II
61.1%
Med.

57. Insert Interval
43.0%
Med.

58. Length of Last Word
55.6%
Easy

61. Rotate List
39.5%
Med.

97. Interleaving String
41.5%
Med.

99. Recover Binary Search Tree
55.6%
Med.

105. Construct Binary Tree from Preorder and Inorder Traversal
66.2%
Med.

116. Populating Next Right Pointers in Each Node
64.9%
Med.

126. Word Ladder II
27.1%
Hard

130. Surrounded Regions
42.1%
Med.

160. Intersection of Two Linked Lists
60.4%
Easy

168. Excel Sheet Column Title
43.0%
Easy

2161. Partition Array According to Given Pivot
90.0%
Med.

2149. Rearrange Array Elements by Sign
84.2%
Med.

232. Implement Queue using Stacks
67.8%
Easy

240. Search a 2D Matrix II
54.5%
Med.

241. Different Ways to Add Parentheses
72.1%
Med.

250. Count Univalue Subtrees
57.0%
Med.

268. Missing Number
69.5%
Easy

269. Alien Dictionary
36.5%
Hard

273. Integer to English Words
34.3%
Hard

314. Binary Tree Vertical Order Traversal
56.7%
Med.

2288. Apply Discount to Prices
32.4%
Med.

345. Reverse Vowels of a String
57.3%
Easy

348. Design Tic-Tac-Toe
58.5%
Med.

353. Design Snake Game
39.0%
Med.

373. Find K Pairs with Smallest Sums
40.5%
Med.

394. Decode String
60.7%
Med.

2364. Count Number of Bad Pairs
54.5%
Med.

412. Fizz Buzz
74.0%
Easy

416. Partition Equal Subset Sum
47.3%
Med.

2381. Shifting Letters II
53.2%
Med.

2379. Minimum Recolors to Get K Consecutive Black Blocks
68.5%
Easy

424. Longest Repeating Character Replacement
56.5%
Med.

438. Find All Anagrams in a String
51.9%
Med.

2405. Optimal Partition of String
78.1%
Med.

441. Arranging Coins
47.2%
Easy

448. Find All Numbers Disappeared in an Array
62.1%
Easy

475. Heaters
39.5%
Med.

480. Sliding Window Median
38.6%
Hard

498. Diagonal Traverse
62.6%
Med.

2461. Maximum Sum of Distinct Subarrays With Length K
42.7%
Med.

2460. Apply Operations to an Array
74.9%
Easy

504. Base 7
51.6%
Easy

2493. Divide Nodes Into the Maximum Number of Groups
67.6%
Hard

2523. Closest Prime Numbers in Range
51.5%
Med.

564. Find the Closest Palindrome
31.6%
Hard

678. Valid Parenthesis String
38.7%
Med.

680. Valid Palindrome II
42.6%
Easy

692. Top K Frequent Words
59.0%
Med.

694. Number of Distinct Islands
62.0%
Med.

719. Find K-th Smallest Pair Distance
45.6%
Hard

428. Serialize and Deserialize N-ary Tree
68.1%
Hard

763. Partition Labels
80.2%
Med.

797. All Paths From Source to Target
83.0%
Med.

2772. Apply Operations to Make All Array Elements Equal to Zero
33.0%
Med.

852. Peak Index in a Mountain Array
67.7%
Med.

871. Minimum Number of Refueling Stops
40.4%
Hard

881. Boats to Save People
60.0%
Med.

904. Fruit Into Baskets
45.7%
Med.

916. Word Subsets
55.6%
Med.

980. Unique Paths III
82.2%
Hard

983. Minimum Cost For Tickets
67.4%
Med.

993. Cousins in Binary Tree
57.8%
Easy

1047. Remove All Adjacent Duplicates In String
71.1%
Easy

1091. Shortest Path in Binary Matrix
49.2%
Med.

1094. Car Pooling
56.0%
Med.

1944. Number of Visible People in a Queue
70.6%
Hard

1207. Unique Number of Occurrences
78.1%
Easy

1221. Split a String in Balanced Strings
86.6%
Easy

1726. Tuple with Same Product
70.2%
Med.

3160. Find the Number of Distinct Colors Among the Balls
54.3%
Med.

1283. Find the Smallest Divisor Given a Threshold
62.8%
Med.

1293. Shortest Path in a Grid with Obstacles Elimination
45.5%
Hard

3191. Minimum Operations to Make Binary Array Elements Equal to One I
81.0%
Med.

1345. Jump Game IV
46.1%
Hard

1383. Maximum Performance of a Team
47.5%
Hard

1456. Maximum Number of Vowels in a Substring of Given Length
60.0%
Med.

3356. Zero Array Transformation II
43.8%
Med.

3413. Maximum Coins From K Consecutive Bags
23.4%
Med.

1552. Magnetic Force Between Two Balls
71.1%
Med.

1718. Construct the Lexicographically Largest Valid Sequence
73.5%
Med.

1683. Invalid Tweets
85.6%
Easy

1710. Maximum Units on a Truck
74.1%
Easy

1765. Map of Highest Peak
75.1%
Med.

1800. Maximum Ascending Subarray Sum
66.5%
Easy

35. Search Insert Position
48.4%
Easy

38. Count and Say
58.0%
Med.

60. Permutation Sequence
49.3%
Hard

1984. Minimum Difference Between Highest and Lowest of K Scores
58.3%
Easy

81. Search in Rotated Sorted Array II
38.6%
Med.

85. Maximal Rectangle
53.0%
Hard

90. Subsets II
59.0%
Med.

94. Binary Tree Inorder Traversal
78.1%
Easy

96. Unique Binary Search Trees
62.2%
Med.

104. Maximum Depth of Binary Tree
76.8%
Easy

113. Path Sum II
60.1%
Med.

2035. Partition Array Into Two Arrays to Minimize Sum Difference
21.4%
Hard

117. Populating Next Right Pointers in Each Node II
55.0%
Med.

119. Pascal's Triangle II
65.6%
Easy

114. Flatten Binary Tree to Linked List
67.8%
Med.

129. Sum Root to Leaf Numbers
68.0%
Med.

141. Linked List Cycle
52.1%
Easy

142. Linked List Cycle II
54.1%
Med.

165. Compare Version Numbers
42.0%
Med.

2115. Find All Possible Recipes from Given Supplies
56.3%
Med.

173. Binary Search Tree Iterator
74.4%
Med.

180. Consecutive Numbers
45.5%
Med.

185. Department Top Three Salaries
57.0%
Hard

187. Repeated DNA Sequences
50.8%
Med.

193. Valid Phone Numbers
27.0%
Easy

197. Rising Temperature
49.9%
Easy

211. Design Add and Search Words Data Structure
46.8%
Med.

213. House Robber II
43.2%
Med.

2134. Minimum Swaps to Group All 1's Together II
65.6%
Med.

221. Maximal Square
48.3%
Med.

228. Summary Ranges
52.6%
Easy

237. Delete Node in a Linked List
81.8%
Med.

2206. Divide Array Into Equal Pairs
79.2%
Easy

286. Walls and Gates
62.6%
Med.

2270. Number of Ways to Split Array
56.1%
Med.

2281. Sum of Total Strength of Wizards
28.1%
Hard

336. Palindrome Pairs
36.1%
Hard

339. Nested List Weight Sum
85.2%
Med.

340. Longest Substring with At Most K Distinct Characters
49.4%
Med.

2300. Successful Pairs of Spells and Potions
44.9%
Med.

2319. Check if Matrix Is X-Matrix
65.5%
Easy

346. Moving Average from Data Stream
79.7%
Easy

355. Design Twitter
41.7%
Med.

362. Design Hit Counter
69.0%
Med.

371. Sum of Two Integers
53.3%
Med.

2347. Best Poker Hand
61.0%
Easy

402. Remove K Digits
34.5%
Med.

403. Frog Jump
46.4%
Hard

2375. Construct Smallest Number From DI String
85.9%
Med.

408. Valid Word Abbreviation
36.7%
Easy

415. Add Strings
51.8%
Easy

419. Battleships in a Board
76.3%
Med.

437. Path Sum III
46.0%
Med.

456. 132 Pattern
33.9%
Med.

459. Repeated Substring Pattern
46.7%
Easy

494. Target Sum
50.4%
Med.

2466. Count Ways To Build Good Strings
59.3%
Med.

516. Longest Palindromic Subsequence
63.7%
Med.

518. Coin Change II
63.0%
Med.

523. Continuous Subarray Sum
30.7%
Med.

2484. Count Palindromic Subsequences
38.7%
Hard

2492. Minimum Score of a Path Between Two Cities
57.6%
Med.

542. 01 Matrix
50.8%
Med.

545. Boundary of Binary Tree
46.9%
Med.

2517. Maximum Tastiness of Candy Basket
65.6%
Med.

556. Next Greater Element III
34.4%
Med.

567. Permutation in String
46.9%
Med.

588. Design In-Memory File System
48.1%
Hard

2542. Maximum Subsequence Score
54.1%
Med.

595. Big Countries
68.2%
Easy

2579. Count Total Number of Colored Cells
66.2%
Med.

605. Can Place Flowers
28.8%
Easy

617. Merge Two Binary Trees
79.3%
Easy

620. Not Boring Movies
74.8%
Easy

2641. Cousins in Binary Tree II
75.4%
Med.

636. Exclusive Time of Functions
64.2%
Med.

642. Design Search Autocomplete System
49.3%
Hard

647. Palindromic Substrings
71.3%
Med.

657. Robot Return to Origin
76.1%
Easy

682. Baseball Game
78.3%
Easy

2643. Row With Maximum Ones
74.7%
Easy

695. Max Area of Island
73.0%
Med.

2658. Maximum Number of Fish in a Grid
70.7%
Med.

716. Max Stack
45.3%
Hard

2657. Find the Prefix Common Array of Two Arrays
87.7%
Med.

724. Find Pivot Index
60.0%
Easy

740. Delete and Earn
56.7%
Med.

743. Network Delay Time
56.5%
Med.

752. Open the Lock
60.6%
Med.

2698. Find the Punishment Number of an Integer
82.4%
Med.

754. Reach a Number
43.7%
Med.

761. Special Binary String
63.2%
Hard

2769. Find the Maximum Achievable Number
91.1%
Easy

2704. To Be Or Not To Be
62.8%
Easy

773. Sliding Puzzle
73.0%
Hard

785. Is Graph Bipartite?
57.3%
Med.

622. Design Circular Queue
52.4%
Med.

836. Rectangle Overlap
45.5%
Easy

841. Keys and Rooms
74.3%
Med.

887. Super Egg Drop
28.5%
Hard

888. Fair Candy Swap
62.9%
Easy

896. Monotonic Array
61.6%
Easy

918. Maximum Sum Circular Subarray
47.0%
Med.

921. Minimum Add to Make Parentheses Valid
74.7%
Med.

959. Regions Cut By Slashes
77.7%
Med.

968. Binary Tree Cameras
47.0%
Hard

974. Subarray Sums Divisible by K
55.5%
Med.

986. Interval List Intersections
72.5%
Med.

1000. Minimum Cost to Merge Stones
44.0%
Hard

2870. Minimum Number of Operations to Make Array Empty
61.9%
Med.

1027. Longest Arithmetic Subsequence
49.4%
Med.

1166. Design File System
63.8%
Med.

1167. Minimum Cost to Connect Sticks
70.9%
Med.

1197. Minimum Knight Moves
41.2%
Med.

1092. Shortest Common Supersequence
61.3%
Hard

1245. Tree Diameter
61.0%
Med.

1106. Parsing A Boolean Expression
70.0%
Hard

2997. Minimum Number of Operations to Make Array XOR Equal to K
85.7%
Med.

3026. Maximum Good Subarray Sum
20.1%
Med.

1287. Element Appearing More Than 25% In Sorted Array
61.1%
Easy

1143. Longest Common Subsequence
58.0%
Med.

1172. Dinner Plate Stacks
32.7%
Hard

1169. Invalid Transactions
31.2%
Med.

3066. Minimum Operations to Exceed Threshold Value II
45.7%
Med.

1174. Immediate Food Delivery II
53.8%
Med.

1483. Kth Ancestor of a Tree Node
35.4%
Hard

1192. Critical Connections in a Network
57.3%
Hard

3108. Minimum Cost Walk in Weighted Graph
69.0%
Hard

1209. Remove All Adjacent Duplicates in String II
59.2%
Med.

1249. Minimum Remove to Make Valid Parentheses
70.3%
Med.

1251. Average Selling Price
36.9%
Easy

1275. Find Winner on a Tic Tac Toe Game
54.1%
Easy

1343. Number of Sub-arrays of Size K and Average Greater than or Equal to Threshold
69.9%
Med.

1344. Angle Between Hands of a Clock
64.1%
Med.

1368. Minimum Cost to Make at Least One Valid Path in a Grid
70.8%
Hard

1378. Replace Employee ID With The Unique Identifier
83.6%
Easy

1415. The k-th Lexicographical String of All Happy Strings of Length n
85.4%
Med.

1403. Minimum Subsequence in Non-Increasing Order
72.9%
Easy

1422. Maximum Score After Splitting a String
65.2%
Easy

1438. Longest Continuous Subarray With Absolute Diff Less Than or Equal to Limit
56.7%
Med.

1472. Design Browser History
78.0%
Med.

1481. Least Number of Unique Integers after K Removals
63.3%
Med.

1482. Minimum Number of Days to Make m Bouquets
55.3%
Med.

1496. Path Crossing
62.5%
Easy

1497. Check If Array Pairs Are Divisible by k
46.2%
Med.

1498. Number of Subsequences That Satisfy the Given Sum Condition
43.8%
Med.

1539. Kth Missing Positive Number
61.8%
Easy

1559. Detect Cycles in 2D Grid
49.7%
Med.

1572. Matrix Diagonal Sum
83.6%
Easy

3429. Paint House IV
45.2%
Med.

3458. Select K Disjoint Special Substrings
17.6%
Med.

3454. Separate Squares II
18.7%
Hard

1609. Even Odd Tree
66.5%
Med.

1679. Max Number of K-Sum Pairs
56.0%
Med.

1661. Average Time of Process per Machine
68.9%
Easy

1700. Number of Students Unable to Eat Lunch
78.5%
Easy

1732. Find the Highest Altitude
83.8%
Easy

1790. Check if One String Swap Can Make Strings Equal
49.5%
Easy

1856. Maximum Subarray Min-Product
38.7%
Med.


# LeetCode Interview Experience #

https://leetcode.com/discuss/post/6075975/amazon-sde2-50-posts-in-1-dsalplldhld-by-mzmg/
https://leetcode.com/discuss/post/5328221/frequently-asked-low-level-design-lld-qu-l0xk/











###### 2025 ##########

Round1 - Low Level Design
LP

Tell me about a time when you went above and beyond to serve customer. Why? How?
Tell me about a time when you took an unpopular stance and your team members or manager disagreed. What? how navigate?
Design Tic Tac Toe
Round 2 - Hiring Manager - System Design
LP

Tell me about a time when you had to learn new skillset beyond the scope of your day to day work
Conflict Resolution with manager
Design Instagram
Round 3 - Coding
LP

Customer obsession
Dive deep
Medium question, didnt come across in leetcode but could be solved using priority queue in under 20 mins

Round 4 - Coding
LP

Deliver under strict deadlines
Tell me about a time when you had to make a decision between long-term value or short-term results.
Design a lottery system where a customer can buy a lottery ticket ranging from 1 cent to 100 dollars. At the end of sale of all lottery ticket we will have a lucky draw where a winner will be chosen randomly and the chances of winning a customer should be according to the price they have paid for the ticket in other words the one who paid more should have more chances of winning.

Interviewer had a certain solution in mind, struggled a lot to arrive at that, came up with something similar, not sure if this helped

R1 - OA + behavior question and standard system design questions.

R2 - 2 coding questions
Q1 : finding maximum length subarray with first and last element having difference k.
solved this within 20 mins from brute force to optimal solution.
Q2 : finding maximum product L shaped path within a matrix.
needed some hints but solved fully.
no LP questions were asked.
I think the interviewer seems satisfied with my answers.

R3 - LLD
design notification system with focus on building message content for different channels.
2 LP questions.


Questions are like -
Describe a difficult interaction you had with a customer. How did you deal with it?
What was the outcome? How would you handle it differently

Current Exp : 2.7 years

Recruiter reached out via linkedin

Round1 : LP +DSA
20 mins focussed on LP then two DSA questions

Jump game 2
Min Stack
both on leetcode

Round2: LP + LLD
This round got extended to 1.5 hrs
40 mins LP +40 mins LLD

Low level design of google docs, focus was on db selection, design patterns and flow diagram

Round3 LP+ HLD( Both 30 mins) -> Was asked HLD of traffic rules violation detection system

Round4 [ Bar raiser] LP+ DSA -> 30 mins LP +20 mins DSA i completed question before time
DSA question: https://leetcode.com/problems/minimum-falling-path-sum/description/

Got call after 1 week that i am selected

First Round
Experience:
I joined the interview on time, but the interviewer was 5 min late. For me, it was okay.
The interview was structured as follows:
30-35 minutes: Behavioral questions focused on Amazon’s Leadership Principles.
20-25 minutes: DSA problem – Word Ladder (LeetCode Hard).
Feedback & My Thoughts:
I had solved the Word Ladder problem 11 times over the past 1.5 years as part of my preparation.
The feedback mentioned that I provided an incorrect time complexity, but I double-checked later and found my analysis to be correct.
Another concern raised was that I was in a hurry during the problem-solving.
The interviewer expected production-level code within 25 minutes.
Given the time constraint, I started with the optimal approach instead of brute force, explaining it in detail.
If the interviewer thought I was rushing, they could have guided me accordingly, right?
Second Round
Experience:
Again, I joined on time, but the interviewer was late. For me, it was okay.
The interview was structured as follows:
30-35 minutes: Behavioral questions.
25-30 minutes: Low-Level Design (LLD) – Design Chess.
Feedback & My Thoughts:
Given 25-30 minutes, I structured my approach as follows:
Requirements gathering.
Defining class names.
Creating the UML diagram.
My UML covered key design principles:
Strategy Pattern for rules.
Factory Pattern for chess pieces.
The feedback mentioned that I over-designed the problem and lacked experience.



Round 1: Data Structures & Algorithms (DSA)

Questions:

Medium Linked List problem – Successfully coded the solution
Kahn’s Algorithm type problem – Explained the approach but couldn't fully implement due to time constraints
2 Leadership principles
Round 2: High-Level Design (HLD)

Question: Design Twitter, 2 Leadership principles

Performance:

Discussed system components, database design, and scaling strategies
Interviewer seemed satisfied with the discussion

Round 1: DFS-based question and 2 LPs.
Round 2: System Design (Notification Service) and 2 LPs.
Round 3: Word Search (Both) and 2 LPs.

Total time: 60 minutes.
First 30 minutes were standard behavioral questions based on Amazon LPs.
Next, I was asked to create an interface to implement package installations in operating systems. I was told, the actual installation API has been already written called installPackage() in the same class. I just needed to design the class which will have this public API along with other necessary APIs and/or variables. Basically, an OOD question with a hint of LLD.

Round1 : LLD , Design StackOverflow
Requirements:

A valid user should be able to post a question
A valid user should be able to answer to a question
upvote/downvote to a question and answer
add comment to a answer
search for a question
Round2 : DSA

Find Unique Triplets with sum 0, the input array have unique integers.

There are n players, every player have played with every other player. find any valid sequence of arrangement of these players as per below conditions

whoWon(playerA, playerB) returns player who won the game
the immediate left of a player should have lost to the player
the immediate right of a player should have won aganist the player
LP:

Any repetative task that you have done ?
Unpopular opinion in your team discussions?
Any time when you have crossed deadline?
Complex situations you have faced.
had to learn new things ?

### USA Experience ###############
2 LP
Design a system for Hotel Reservation

Round 2:
2 LP
Design customer reviews for products in Amazon (LLD)

Round 3:
2 LP
https://leetcode.com/discuss/interview-question/1031933/amazon-onsite-sde2-package-dependencies

Round 4:
2 LP
https://leetcode.com/problems/minimum-score-of-a-path-between-two-cities/editorial/

Final Thoughts
I felt confident on 2 and 3 rounds. For 1st round I couldn't dive deep because of time constraints. For the final round, interviewer seemed to be disconnected, there was no proper feedback/response from the interviewer, I gave the correct solution for the coding problem but mumbled a bit during the LPs, and from then the interviewer seemed disinterested.
Not sure about my chances.

Round 1: Introduction + Leadership Principles (LP) + a custom tree problem similar to the Lowest Common Ancestor (LCA), for finding a value comon to both nodes (with no root given)
Round 2: Introduction +LP + System Design (e.g., designing Instagram reels, TikTok).
Round 3: Introduction +LP + String manipulation, focused on processing strings and producing various outputs using mathematical logic.
Similar to https://leetcode.com/problems/integer-to-english-words/
Round 4: Introduction +LP + a priority queue problem involving value updates and finding the top n values.
Similar to https://leetcode.com/problems/the-number-of-employees-which-report-to-each-employee/description/
For all rounds, the introduction and Leadership Principles (LP) discussion took 30 minutes. The interviewer typically asked one LP question, but if time allowed and the responses were strong, they would ask a second question until the 30-minute mark.

Overall, it was a positive experience. Although I struggled to complete the coding tasks within the time limit, my approach and intuition were correct. [Response in 3days]

All the questions they asked were not straightforward LeetCode problems. Instead, they were combinations of different LeetCode questions, making them tricky. It was easy to fall into the trap of thinking I knew the solution due to prior practice with similar problems, but these required recognizing they were blends of two distinct questions. As a result, the typical solutions wouldn’t work directly.

All the LP's answers needs to be unique, be prepare with multiple scenarios

Hope this helps in any way - best of luck!


##################


3 Sum
Robot in Circle
Number Game
Find All Combination of Numbers that Sum to a Target
Fill The Truck
Slowest Key
Five Star Sellers
Number of Ways to Split Into Primes
Storage Optimization
Music Pair
Minimum Difficulty of a Job Schedule
Autoscale Policy, Utilization Check
Optimal Utilization
Merge Two Sorted Lists
Two Sum - Unique Pairs
Shopping Patterns
Reorder Data in Log Files
Top K Frequently Mentioned Keywords


OA : 1 Medium 1 Medium-hard ( don't remember questions )

Onsites ( 4 )
Round 1 : ( Lean hire )
2 DSA problems ( Binary search & standard DP on string )
LP Discussion

Round 2 : ( Strong Hire )
LLD : Design splitwise app
Lot of discussion on DB schema and API design along with discussion on storage option for metrics calculation (spends per day/year/month/user/group/trip )

Round 3 : HM round ( Strong Hire )
HLD :
Design ixigo kind of app
Discussion on dynamic pricing of tickets
LP : Lot of discussion on customer obsession

Round 4 : Bar Raiser ( Strong hire )
1 DSA ( Standard graph problem, proper running code was expected )
LP : Discussion citing current projects
1 . A project where to you chased a tight deadline ( all LP questions were in similar pattern )

OA : 1 Medium 1 Medium-hard ( don't remember questions )

Onsites ( 4 )
Round 1 : ( Lean hire )
2 DSA problems ( Binary search & standard DP on string )
LP Discussion

Round 2 : ( Strong Hire )
LLD : Design splitwise app
Lot of discussion on DB schema and API design along with discussion on storage option for metrics calculation (spends per day/year/month/user/group/trip )

Round 3 : HM round ( Strong Hire )
HLD :
Design ixigo kind of app
Discussion on dynamic pricing of tickets
LP : Lot of discussion on customer obsession

Round 4 : Bar Raiser ( Strong hire )
1 DSA ( Standard graph problem, proper running code was expected )
LP : Discussion citing current projects
1 . A project where to you chased a tight deadline ( all LP questions were in similar pattern )

Question 1: https://leetcode.com/problems/kth-largest-element-in-an-array/description/ where the input stream never ends

Question 2: https://leetcode.com/problems/climbing-stairs/description/

Question 3: https://leetcode.com/problems/all-paths-from-source-to-target/description/

System Design: Design google doc where you can create doc and share link to others for review. Follow up: how did you make it scalable to handle hot hits?

Round 1: Data Structures & Algorithms (DSA) Round
Questions:
A problem similar to Find Peak Element (Binary Search).
Find Median from Data Stream (Heap-based approach).
Solved both on paper and answered follow-ups on Heap Data Structure.
Feedback: Positive ✅

Round 2: Hiring Manager Discussion + LRU & LFU Design
Discussion: Previous work experience in detail (20-30 mins).
Coding Task:
Designed and implemented LRU Cache on paper.
Discussed LFU Cache due to time constraints.
Feedback: Positive ✅

Round 3: High-Level Design (HLD) + Low-Level Design (LLD)
Problem: Designing the Contact Support feature for an e-commerce website.
Outcome:
Performed well in HLD discussion.
LLD discussion took most of the time, so I couldn’t complete the class and interface design.
Feedback: Negative ❌

Round 4: Bar Raiser + LLD
Leadership Principles (LP): Answered 7-8 behavioral questions.
System Design Task: Rate Limiter (Took around 40 minuts)
Implemented two algorithms in the remaining 10-15 minutes.
Interviewer seemed positive, but feedback turned out negative.
Feedback: Negative ❌

Round 1: Given list of logs with each log containing userId and WebpageId. Give the 3-page sequence that is visited maximum times by the user. This 3-page sequence is aggregated on userId.

Round 2:

Given a binary tree and a node where a fire is started. Fire spreads to adjacent nodes in 1 unit of time. FInd time for tree to burn completely.
Frog Jump
Round 3: HM round with LLD. Design Parking system. Focus was on classes, fields, methods.

Round 4: Bar raiser HLD. Design Notification Service.


Online Assessment:
Section 1: (90 mins)

Simple medium question based on sets.
Medium question. Solvable only using Trie. You can solve some common Trie problems. solved both questions in 40mins.
Section 2 & 3: Based on behavioural and situation-based questions.
Received a call from HR after 1 week. Round 1 & 2 got scheduled after 3 weeks.
One month gap between OA and Round 1.

Round 1: Technical (LLD)
Interviewer: Sr. SDE (very supportive and encouraging)
Started with two amazon LP questions. I followed STAR based approach. But interviewer not satisfied with my answers. You must remember the task in depth. They will dig deep into it. (20 mins)
Design Email domain server (LLD). Firstly, I didn’t understand the question properly. Interviewer explained it one more time. I never seen this question before. I was not able to think about the solution. Interviewer gave lot of hints he also suggested some APIs which are needed. Because of lack of preparation, I couldn’t solve it fully. Solved it partially. He also breakdown the problem into two parts. First part, to do domain name registration and second part email creation, sending email between same domain users and different domain users and handling privacy.(35 mins)
Expectation from Interviewer: I need to come up with high level design with DB selections and other components details. later deep dive into APIs and schemas and indexing and scalability.
Example: user must be able to register their domain. Example leetcode.com.
owner can create emails like xyz@leetcode.com
sending mail between same domain and different domains like leetcode.com & codeforce.com
Learnings:

Don’t just watch videos on youtube. try to solve it on your own. Also use timer while practicing. You need to solve it in 35 mins.
Solve using online platforms like draw.io. practice it more because this makes you faster in the interview and comfortable with the online platform.
Always discuss with interviewer before selecting something. Example Sql or NoSql. Remember interviewer is there to help you. Explain what you are thinking. He will correct you if you are wrong.
Round 2: Technical (DSA)
Interviewer: Sr. SDE
Started with one Tree based question (35 mins) and two amazon LP questions (20 mins).
Given two nodes of a binary tree. Find the distance between two nodes in a tree with unique values.
Tree with pointers from child to parent.



Coding 1: https://leetcode.com/problems/word-break-ii/description/ variant
Coding 2: Given a grid whose cells are 'O' and 'X', latter being a blokcer. Given source and destination, find if there is a path exists between source and destination. You can only travel straight or take a right turn.
LLD: https://leetcode.com/discuss/interview-question/1797428/Amazon-or-Round-3(Onsite)-or-Billing-System-LLD variant

i had amazon phone intrview and this my questions similar to leetcode Number of Connected Components in an Undirected Graph
int[][] edges = {{0, 1}, {0, 2}, {1, 2}, {1, 3}, {3, 4},{5,6},{6,7},{8,5},{10,null}};
out put n1={0,1,2,3,4} , n2 {5,6,7,8}, n3 {10}


Round 2 - DSA

Problem Solving and LP principles:
Interview started with introductions. Then we moved to LP principle based questions. There was one question around delivering results. I gave a very detailed answer using STAR pattern and also shared metrics. I answered follow up questions around challenges faced. I have been working at a startup and led some good projects so this was comparatively easy for me.

Then we moved to a coding problem on Livecode platform. It was a standard medium level problem. I implemeted the solution within 15-20 minutes. There was a follow-up question for which I gave 2 solutions. Implemented one of the solutions that prioritised read API performance over write as reads are more frequent.

I have been practicing DSA on and off but consider myself mid-level in solving them. The interviewer was very experienced (12+ YOE) and enjoyed collaboration.
The interviewer was nodding head and seemed to agree to my answers.

Overall, this round went really good.

Round 3 - LLD

The interview started with introductions. There was one question on leadership principles - disagree and commit. I answered this question using STAR pattern. There was one follow up question. Answered that as well. It felt like interviewer didn't like my answer or was distracted.

Then we moved to the LLD problem. The requirement was pretty simple and aligned with one of my major project. I feel like the interviewer made up this problem looking at my resume. I thought I had it.

I listed down requirements and told him about various cases around this. I mentioned that I will use webhooks and asynchronous processing but he didn't agree to it. He pushed back. I explained that API latency can be high for the task we are going to perform and thats why we should not keep the client waiting. However, he pushed back harder. I had to remove that from requirements.

I listed one more requirement and tried to clarify whether this requirement makes sense. He said this is my system and its upto me to decide. I felt like this was not very collaborative.

Still I asked him if he wants me to cover anything else or these requirements makes sense for the problem.

Now, he asked me to explain the user workflow along with DB I will be using. I wasn't prepared for this as its a LLD round and I thought we were supposed to draw UML (class design). However, I drew a simple HLD diagram on draw.io. Then we moved to API design. There were constant interruptions from the interviewer so I could not focus and missed very simple things by now.

Then he asked me to write some code. I did. But again there were constant interruptions on each and every line. I tried to be calm and said things like "I agree', "You are right", etc. I used concept like single responsibility and dependency injection while coding to promote extensibility and keep classes losely coupled but he didn't consider those as plus points.

There is no right or wrong answer to a vague LLD problem and it depends on user needs.

Overall, this round didn't go well. I was able to defend some of the points though.

I might be having hiring manager (HLD) round next but not too sure. Hiring manager and bar raiser rounds hold more importance and it will be decided after receiving a detailed feedback for the LLD round.

I believe there is a need for a proper format for LLD rounds. Any thoughts on how I should have approached this round?

Can someone help with preparation guide for HLD round as well?

I was asked one LP question
DSA question: https://leetcode.com/problems/number-of-subsequences-that-satisfy-the-given-sum-condition/description/

Then after 2 weeks, I mailed the recruiter and I got to know that I had passed phone screen and they would schedule the next rounds.

Round 1

I was not asked any LP questions this round, the interviewer directly jumped into DSA problem.
It was a DP question which asked to find max subarray sum such that the start and end element of the subarray are equal.
I gave a brute-force solution at first which I thought would be enough, but he wanted me to optimize it further. I tried to optimize my brute-force solution itself, but I should have just abandoned that approach and started with DP approach right away. I wasted a lot of time trying to fix my first approach and pivoted to the DP approach very late. I was able to give the logic for DP solution but not able to code it because time was up.

Round 2

The interviewer started with 2 LP questions
After that he told me he would be asking 2 DSA questions.
The first one was based on trees, I don't remember exact question but I was able to explain solution and code it up and the interviewer seems satisfied.
Then he moved on to the next question which was kind of a tricky one with arrays.
We are given an array with positive numbers. We can combine any two numbers and their sum is added to our score and the sum is added to the array and the original numbers are removed, we need to combine all numbers in the array such that our score is the minimum at the end when we are left with only one number.
I was not really able to come up with solution for this one, as some edge cases were failing. Just before the end of the interview, the interviewer told me the order in which I should add up the numbers for one failing test case and from there I was able to come up with the solution.

Round 3

This was an HLD round and I was asked to design a proximity service. I think this round went well.
This round also no LP questions were asked.

Round 4
I was asked an LP question
This was an LLD round and I was asked to design a board game. I think this round also went well.

📝 Round 1: Screening (Eliminatory)
DSA Question: Given a 2D array [n*2] with [timestamp, value], aggregate values per minute. Leetcode medium level

Approach: Used HashMap (discussed alternative approaches like TreeMap, sparse arrays, and tradeoffs).
LP: 3 questions.

🧠 Round 2: 2 LP + DSA
DSA Question: Reorganize String
Solution: Used Priority Queue (Heap) for O(26log 26*n ) ≈ O(n) time complexity. Knew the linear solution but didn’t discuss it, as i was not sure if that's correct.
LP: 2 Leadership Principle questions.

🛠 Round 3: 2 LP + High-Level Design
System Design: Design Tiny URL
Discussion: Scaling, caching, DB design, URL encoding strategies.
LP: 2 questions. this round went well.

📌 Round 4: 8-12 LPs (Full LP Round)

Product Manager from a different team took this round.
All my prepared LP examples got exhausted, so had to dig into my past work for more stories for the next rounds.

💻 Round 5: 2 LP + Low-Level Design + 1 more LP

LLD Question: E-commerce API to fetch products for a category & its subcategories.
Hiccup: Took too long to catch the hint for using Strategy Pattern for filtering.
LP: 3 questions. This round didn't go that well, reason of rejection is this round

🗣 Round 6: Deep Dive LP (3 LPs)
In-depth follow-ups on every story.
Heavy focus on problem-solving in ambiguity.


